#==============================================================================
#
#   Rule:       21 - iRODS Queue poll heartbeat
#
#   Purpose:    Send an alert to nagios (OK) if periodic check-queue messages occur again
#
#   Descr:
#
#==============================================================================

# Note that rule name equals filename and rules are initially executed in alphanumeric order of the rule names!

### Index to perform query on. Valid indexes (or index patterns) are: core, aux, all) [required]
index: core

### Type of the rule [required]
# valid rule types are:
#   - Any           Match everything
#   - Blacklist     Check certain fields (<compare_key>) agains the <blacklist> and match when it is in the blacklist
#   - Whitelist     Check certain fields (<compare_key>) agains the <whitelist> and match when it is NOT in the blacklist
#   - Change        Monitor a certain field (<compare_key>) and match if that field changes based on same field with same <query_key>
#   - Frequency     Match when at least <num_events> occurrences is found in the <timeframe> (and not seen before)
#   - Spike         Matches when <num_events> is <skike_height> times larger/smaller than in the previous window <timeframe>
#   - Flatline      Matches when the total number of events is under a given <threshold> in the <timeframe>
#   - New_term      matches when the a new value (<new_term>) appears in <fields>
#   - Cardinality   Matches when <num_events> for <cardinality_field> within the <timeframe> is higher or lower than <min_cardinality> or <max_cardinality>
#
# see https://elastalert.readthedocs.io/en/latest/ruletypes.html for more details and configuration options
#
type: frequency


### general rule configuration [required]

filter:
- query:
    match_phrase:
      message: "checking the queue for jobs"
- query:
    term:
      logtrail: irods


### ruletype specific configuration [depending on ruletype]

num_events: 15
timeframe:
    minutes: 15

### max 1 alert per 5 minutes
realert:
    minutes: 5

### make sure that rules fire alerts from start of elastalert!
scan_entire_timeframe: false


### Alert configuration

### Used alert(s) for this rule [required]
# Valid alerts (as potentially used within DataHub) are:
#   - command       Executes a command (eg. used to send an alert to Nagios by NRDP)
#   - email         Sends an email via smtp server
#   - jira          Creates a ticket in Jira (only available with service account for ElestAlert)
#   - slack         Sends a message to a predefined Slack channel
#   - http post     Sends results to a JSON endpoint using HTTP POST
#
# Custom alerts
#   - custom_alerts.NagiosAlerter    Sends status (0-3) and output-text to nagios server
#
# More information and alerter specific fields can be found at https://elastalert.readthedocs.io/en/latest/ruletypes.html#alerts
#
alert: "custom_alerts.NagiosAlerter"

### Text for the subject [optional], default is rule name
#
# the alert text can be formatted using standard Python formatting syntax. this
# means the alert_subject field can contain placeholders like {0}, {1}, etc. These
# placeholders will be replaced by the subsequent values of the field alert_subject_args.
# Example:
#   alert_subject: "Issue {0} occurred at {1}
#   alert_subject_args:
#   - issue.name
#   - "@timestamp"
#
alert_subject: "iRODS is polling its queue frequently"

### Nagios Alerter doesn't support body

### alerter specific configuration

# Host object as configured in Nagios
nagios_host: RIT-icat-prod
# Service object as configured in Nagios
nagios_service: iRODS queue polling

# Current status for this Nagios service when the rule matches: (0=OK, 1=WARNING, 2=ERROR, 3=UNKNOWN)
nagios_status: 0
